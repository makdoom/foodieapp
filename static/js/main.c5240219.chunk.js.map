{"version":3,"sources":["components/Recipes.js","components/Home.js","components/RecipeDetails.js","App.js","index.js"],"names":["Recipe","recipes","map","recipe","index","className","key","src","image","loading","alt","label","length","substring","source","to","pathname","calories","state","href","url","Home","useState","query","setQuery","setRecipes","getData","search","a","Axios","get","response","data","hits","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","onSubmit","e","preventDefault","onClick","console","log","type","placeholder","value","onChange","target","Recipes","RecipeDetails","props","location","ingredients","item","text","Math","round","weight","icon","faArrowLeft","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5240219.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Recipe = ({ recipes }) => {\r\n  return recipes.map((recipe, index) => (\r\n    <div className=\"card\" key={index}>\r\n      <img src={recipe.recipe.image} loading=\"lazy\" alt={recipe.recipe.label} />\r\n      <h5>\r\n        {recipe.recipe.label.length < 20\r\n          ? `${recipe.recipe.label}`\r\n          : `${recipe.recipe.label.substring(0, 20)} ...`}{\" \"}\r\n      </h5>\r\n      <p>\r\n        PUBLISHER :{\" \"}\r\n        {recipe.recipe.source.length < 20\r\n          ? `${recipe.recipe.source}`\r\n          : `${recipe.recipe.source.substring(0, 15)} ...`}\r\n      </p>\r\n      <div className=\"btn-section\">\r\n        {/* <Link to=\"/recipe\"> */}\r\n        <Link\r\n          to={{\r\n            pathname: `/recipe/${recipe.recipe.calories}`,\r\n            state: { recipe: recipe.recipe },\r\n          }}\r\n        >\r\n          <button className=\"ingre-btn btn\">\r\n            <span>Ingredients</span>\r\n          </button>\r\n        </Link>\r\n\r\n        <a href={recipe.recipe.url}>\r\n          <button className=\"full-btn btn\">\r\n            <span>view Recipe</span>\r\n          </button>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default Recipe;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Recipes from \"./Recipes\";\r\n\r\n// API key and ID\r\nconst API_KEY = \"4ac283b2ad4d0a72799ec2980ed2b3b2\";\r\nconst API_ID = \"8ab14eb9\";\r\n\r\nconst Home = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [recipes, setRecipes] = useState([]);\r\n\r\n  // Fetching data from API\r\n  const getData = async (search) => {\r\n    if (query !== \"\") {\r\n      const response = await Axios.get(\r\n        `https://api.edamam.com/search?q=${search}&app_id=${API_ID}&app_key=${API_KEY}`\r\n      );\r\n      setRecipes(response.data.hits);\r\n      setQuery(\"\");\r\n    }\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    getData(query);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const data = localStorage.getItem(\"Recipe\");\r\n    if (data) {\r\n      setRecipes(JSON.parse(data));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"Recipe\", JSON.stringify(recipes));\r\n  });\r\n\r\n  const show = () => console.log(recipes);\r\n  return (\r\n    <>\r\n      <div className=\"form\">\r\n        <form onSubmit={onSubmit}>\r\n          <h1 onClick={show}>\r\n            F<span>oo</span>die\r\n          </h1>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search Recipe\"\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n          />\r\n          <button className=\"search-btn\">Search</button>\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"recipes\">\r\n        <Recipes recipes={recipes} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst RecipeDetails = (props) => {\r\n  const recipe = props.location.state.recipe;\r\n  console.log(recipe.ingredients);\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"active-recipe\">\r\n        <img\r\n          src={recipe.image}\r\n          alt={recipe.label}\r\n          className=\"active-recipe-img\"\r\n        />\r\n        <h2 className=\"active-recipe-title\">{recipe.label}</h2>\r\n        <p className=\"ingredients-heading\">ingredients</p>\r\n        <div className=\"active-recipe-ingredients\">\r\n          {recipe.ingredients.map((item, index) => (\r\n            <li className=\"ingredient-list\" key={index}>\r\n              {item.text}\r\n              <p>\r\n                <span>Weight : </span> {Math.round(item.weight)}\r\n              </p>\r\n            </li>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"active-recipe-footer\">\r\n          <Link to=\"/\">\r\n            <button className=\"back\">\r\n              <span>\r\n                <FontAwesomeIcon icon={faArrowLeft} /> Go Back\r\n              </span>\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeDetails;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"./responsive.css\";\nimport \"./Recipe.css\";\nimport \"./RecipeDetail.css\";\nimport Home from \"./components/Home\";\nimport { Route } from \"react-router-dom\";\nimport RecipeDetails from \"./components/RecipeDetails\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/recipe/:calories\" component={RecipeDetails} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter as Router, Switch } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}